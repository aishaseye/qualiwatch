<?php

echo "üéÆ Test des Mod√®les de Gamification QualyWatch\n";
echo "=" . str_repeat("=", 50) . "\n\n";

// Test 1: V√©rifier que les fichiers de mod√®les existent
echo "üìã Test 1: V√©rification des mod√®les...\n";

$models = [
    'Badge' => 'app/Models/Badge.php',
    'UserBadge' => 'app/Models/UserBadge.php',
    'Leaderboard' => 'app/Models/Leaderboard.php',
    'Challenge' => 'app/Models/Challenge.php',
    'UserChallenge' => 'app/Models/UserChallenge.php',
];

foreach ($models as $name => $path) {
    if (file_exists(__DIR__ . '/' . $path)) {
        echo "  ‚úÖ Mod√®le $name: OK\n";
    } else {
        echo "  ‚ùå Mod√®le $name: MANQUANT ($path)\n";
    }
}

echo "\n";

// Test 2: V√©rifier les services
echo "üõ†Ô∏è  Test 2: V√©rification des services...\n";

$services = [
    'GamificationService' => 'app/Services/GamificationService.php',
    'RewardService' => 'app/Services/RewardService.php',
];

foreach ($services as $name => $path) {
    if (file_exists(__DIR__ . '/' . $path)) {
        echo "  ‚úÖ Service $name: OK\n";
    } else {
        echo "  ‚ùå Service $name: MANQUANT ($path)\n";
    }
}

echo "\n";

// Test 3: V√©rifier les migrations
echo "üóÑÔ∏è  Test 3: V√©rification des migrations...\n";

$migrations = [
    'badges' => 'database/migrations/*create_badges_table.php',
    'user_badges' => 'database/migrations/*create_user_badges_table.php',
    'leaderboards' => 'database/migrations/*create_leaderboards_table.php',
    'challenges' => 'database/migrations/*create_challenges_table.php',
    'user_challenges' => 'database/migrations/*create_user_challenges_table.php',
];

foreach ($migrations as $name => $pattern) {
    $files = glob(__DIR__ . '/' . $pattern);
    if (!empty($files)) {
        echo "  ‚úÖ Migration $name: " . basename($files[0]) . "\n";
    } else {
        echo "  ‚ùå Migration $name: MANQUANTE ($pattern)\n";
    }
}

echo "\n";

// Test 4: V√©rifier les √©v√©nements
echo "üé™ Test 4: V√©rification des √©v√©nements...\n";

$events = [
    'BadgeEarned' => 'app/Events/BadgeEarned.php',
    'LeaderboardUpdated' => 'app/Events/LeaderboardUpdated.php',
    'ChallengeCompleted' => 'app/Events/ChallengeCompleted.php',
    'LeaderboardPublished' => 'app/Events/LeaderboardPublished.php',
];

foreach ($events as $name => $path) {
    if (file_exists(__DIR__ . '/' . $path)) {
        echo "  ‚úÖ √âv√©nement $name: OK\n";
    } else {
        echo "  ‚ùå √âv√©nement $name: MANQUANT ($path)\n";
    }
}

echo "\n";

// Test 5: V√©rifier les listeners
echo "üîî Test 5: V√©rification des listeners...\n";

$listeners = [
    'SendBadgeEarnedNotification' => 'app/Listeners/SendBadgeEarnedNotification.php',
    'SendLeaderboardNotification' => 'app/Listeners/SendLeaderboardNotification.php',
    'SendChallengeNotification' => 'app/Listeners/SendChallengeNotification.php',
    'UpdateGamificationProgress' => 'app/Listeners/UpdateGamificationProgress.php',
];

foreach ($listeners as $name => $path) {
    if (file_exists(__DIR__ . '/' . $path)) {
        echo "  ‚úÖ Listener $name: OK\n";
    } else {
        echo "  ‚ùå Listener $name: MANQUANT ($path)\n";
    }
}

echo "\n";

// Test 6: V√©rifier les commandes
echo "‚ö° Test 6: V√©rification des commandes...\n";

$commands = [
    'RunGamificationCheck' => 'app/Console/Commands/RunGamificationCheck.php',
];

foreach ($commands as $name => $path) {
    if (file_exists(__DIR__ . '/' . $path)) {
        echo "  ‚úÖ Commande $name: OK\n";
    } else {
        echo "  ‚ùå Commande $name: MANQUANTE ($path)\n";
    }
}

echo "\n";

// Test 7: V√©rifier les jobs
echo "üèÉ Test 7: V√©rification des jobs...\n";

$jobs = [
    'ProcessGamificationUpdate' => 'app/Jobs/ProcessGamificationUpdate.php',
];

foreach ($jobs as $name => $path) {
    if (file_exists(__DIR__ . '/' . $path)) {
        echo "  ‚úÖ Job $name: OK\n";
    } else {
        echo "  ‚ùå Job $name: MANQUANT ($path)\n";
    }
}

echo "\n";

// Test 8: V√©rifier la syntaxe PHP
echo "üîç Test 8: V√©rification de la syntaxe...\n";

$phpFiles = [
    'app/Models/Badge.php',
    'app/Models/UserBadge.php',
    'app/Services/GamificationService.php',
    'app/Events/BadgeEarned.php',
];

foreach ($phpFiles as $file) {
    if (file_exists(__DIR__ . '/' . $file)) {
        // Test de syntaxe basique (v√©rifier si le fichier commence par <?php)
        $content = file_get_contents(__DIR__ . '/' . $file);
        if (strpos($content, '<?php') === 0) {
            echo "  ‚úÖ Syntaxe $file: OK\n";
        } else {
            echo "  ‚ö†Ô∏è  Syntaxe $file: Pas de balise PHP d'ouverture\n";
        }
    }
}

echo "\nüéâ Tests de v√©rification termin√©s !\n\n";

// R√©sum√©
$totalFiles = count($models) + count($services) + count($events) + count($listeners) + count($commands) + count($jobs);
$existingFiles = 0;

$allFiles = array_merge($models, $services, $events, $listeners, $commands, $jobs);

foreach ($allFiles as $path) {
    if (file_exists(__DIR__ . '/' . $path)) {
        $existingFiles++;
    }
}

echo "üìä R√©sum√©:\n";
echo "  üìÅ Fichiers cr√©√©s: $existingFiles / $totalFiles\n";
echo "  üìà Pourcentage de completion: " . round(($existingFiles / $totalFiles) * 100, 1) . "%\n";

if ($existingFiles === $totalFiles) {
    echo "  üéØ Syst√®me de gamification complet !\n";
} else {
    echo "  ‚ö†Ô∏è  Quelques fichiers manquants d√©tect√©s\n";
}

echo "\n‚ú® Pr√™t pour les tests avec une base de donn√©es !\n";